import Head from "next/head";
import Link from "next/link";
import { useState } from "react";
import { UseQueryResult, useQuery } from "react-query";

interface Items {
  data: {
    items: {
      id: number;
      name: string;
      shortName: string;
    }[];
  };
}
export default function Home() {
  const [limit, setLimit] = useState(10);
  const [offset, setOffset] = useState(0);
  const { isLoading, error, data }: UseQueryResult<Items> = useQuery({
    queryKey: ["allItems", limit, offset],
    queryFn: () =>
      fetch("https://api.tarkov.dev/graphql", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
          Accept: "application/json",
        },
        body: JSON.stringify({
          query: `
          query allItems($limit: Int, $offset: Int){
            items (limit: $limit, offset: $offset ) {
                  id
                  name
                  shortName
            }
          }
        `,
          variables: {
            limit: limit,
            offset: offset,
          },
        }),
      }).then((res) => res.json()),
  });

  const handleNextPage = () => {
    setOffset(offset + 10);
  };

  const handlePreviousPage = () => {
    setOffset(offset - 10);
  };

  console.log(data);

  if (error) return "an error ocurred: ";

  return (
    <>
      <Head>
        <title>Tarkov app</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
          <h1 className="text-5xl font-extrabold tracking-tight text-white sm:text-[5rem]">
            Tarkov <span className="text-yellow-500">T3</span> App
          </h1>
          <div className="">
            <div className="flex max-w-xs flex-col rounded-xl bg-white/10 p-4 text-white">
              <h3 className="text-2xl font-bold">Items</h3>
              <div className="text-lg">
                {isLoading && "loading..."}
                {data && (
                  <ul>
                    {data.data.items.map((item) => (
                      <li key={item.id}>{item.shortName}</li>
                    ))}
                  </ul>
                )}
              </div>
            </div>
            <div className="mt-2 flex justify-between">
              <button
                onClick={handlePreviousPage}
                className="min-w-[80px] rounded-md bg-white/10 p-2 text-white"
              >
                Previous
              </button>
              <button
                onClick={handleNextPage}
                className="min-w-[80px] rounded-md bg-white/10 p-2 text-white"
              >
                Next
              </button>
            </div>
          </div>
        </div>
      </main>
    </>
  );
}
