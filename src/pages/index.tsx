import Head from "next/head";
import { useState } from "react";
import { UseQueryResult, useQuery } from "react-query";

interface Items {
  data: {
    items: {
      id: number;
      name: string;
      shortName: string;
      sellFor: {
        source: string;
        priceRUB: number;
      }[];
    }[];
  };
}
export default function Home() {
  const [limit, setLimit] = useState(10);
  const [offset, setOffset] = useState(0);

  const fetchItems = async () => {
    const response = await fetch("https://api.tarkov.dev/graphql", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        Accept: "application/json",
      },
      body: JSON.stringify({
        query: `
        query allItems($limit: Int, $offset: Int){
            items (limit: $limit, offset: $offset ) {
                  id
                  name
                  shortName
                  sellFor  {
                    priceRUB
                    source
                  }
            }
          }
        `,
        variables: {
          limit: limit,
          offset: offset,
        },
      }),
    });
    if (!response.ok) {
      throw new Error("An error occurred");
    }
    return response.json();
  };

  const { isLoading, error, data }: UseQueryResult<Items> = useQuery({
    queryKey: ["allItems", limit, offset],
    queryFn: fetchItems,
  });

  const handleNextPage = () => {
    setOffset(offset + 10);
  };

  const handlePreviousPage = () => {
    setOffset(offset - 10);
  };

  if (error) return "an error ocurred: ";

  return (
    <>
      <Head>
        <title>Tarkov app</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
          <h1 className="text-5xl font-extrabold tracking-tight text-white sm:text-[5rem]">
            Tarkov <span className="text-yellow-600">T3</span> App
          </h1>
          <header>
            <Items />
          </header>
          <div className="flex w-full flex-col rounded-xl bg-white/10 p-4 text-white">
            <h3 className="text-2xl font-bold">Items</h3>
            <table className="border-collapse border border-slate-600">
              <thead>
                <tr>
                  <th className="border-collapse border border-slate-600">
                    Short name
                  </th>
                  <th className="border-collapse border border-slate-600">
                    Description
                  </th>
                  <th className="border-collapse border border-slate-600">
                    Flea price
                  </th>
                </tr>
              </thead>
              <tbody>
                {isLoading && (
                  <tr>
                    <td>loading...</td>
                  </tr>
                )}
                {data &&
                  data.data.items.map((item) => (
                    <tr
                      className="border-collapse border border-slate-600 text-lg"
                      key={item.id}
                    >
                      <td className="border-collapse border border-slate-600">
                        {item.shortName}
                      </td>
                      <td className="border-collapse border border-slate-600">
                        {item.name}
                      </td>
                      <td className="border-collapse border border-slate-600">
                        {item.sellFor.map((price) => (
                          <span key={price.source}>
                            {price.source === "fleaMarket" &&
                              `${price.priceRUB}` + " â‚½"}
                          </span>
                        ))}
                      </td>
                    </tr>
                  ))}
              </tbody>
            </table>
          </div>
          <div className="mt-1 flex w-full justify-between">
            <button
              onClick={handlePreviousPage}
              className="min-w-[80px] rounded-md bg-white/10 p-2 text-white"
            >
              Previous
            </button>
            <button
              onClick={handleNextPage}
              className="min-w-[80px] rounded-md bg-white/10 p-2 text-white"
            >
              Next
            </button>
          </div>
        </div>
      </main>
    </>
  );
}

export const Items = () => {
  return (
    <>
      <h3>hello</h3>
    </>
  );
};
